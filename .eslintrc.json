{
  "env": {
    "node": true,
    "commonjs": true,
    "es2021": true
  },
  "extends": [
    "eslint:recommended",
    "plugin:@typescript-eslint/eslint-recommended",
    "plugin:@typescript-eslint/recommended"
  ],
  "parser": "@typescript-eslint/parser",
  "parserOptions": {
    "ecmaVersion": 12
  },
  "plugins": [
    "@typescript-eslint"
  ],
  "rules": {
    "no-console": [
      "warn",
      {
        "allow": [
          "table",
          "warn",
          "info",
          "error"
        ]
      }
    ],
    "import/extensions": "off",
    "no-bitwise": "off",
    "no-param-reassign": "off",
    "class-methods-use-this": "off",
    /**
    * 明确类成员可访问性
    */
    "@typescript-eslint/explicit-member-accessibility": [
      "error",
      {
        "accessibility": "no-public"
      }
    ],
    /**
    * 允许未使用的变量
    */
    "no-unused-vars": "off",
    "@typescript-eslint/no-unused-vars": [
      "error",
      {
        "vars": "all",
        "args": "after-used",
        "varsIgnorePattern": "^_",
        "argsIgnorePattern": "^_"
      }
    ],
    /**
    * 是否使用类型推断
    */
    "@typescript-eslint/no-inferrable-types": [
      "error",
      // 禁用属性类型推断，启用参数类型推断
      {
        "ignoreParameters": false,
        "ignoreProperties": true
      }
    ],
    /**
    * 指定数组的元素之间要以空格隔开(,后面)， never参数：[ 之前和 ] 之后不能带空格，always参数：[ 之前和 ] 之后必须带空格
    */
    "array-bracket-spacing": [
      "error",
      "always"
    ],
    /**
    * 必须使用全等
    */
    "eqeqeq": [
      "error",
      "always",
      {
        "null": "ignore"
      }
    ],
    /**
    * always-multiline：多行模式必须带逗号，单行模式不能带逗号
    */
    "comma-dangle": "off",
    "@typescript-eslint/comma-dangle": [
      2,
      "always-multiline"
    ],
    /**
    * 缩进
    * https: //eslint.org/docs/rules/indent#options
    */
    "indent": "off",
    "@typescript-eslint/indent": [
      "error",
      2,
      {
        "VariableDeclarator": "first",
        "MemberExpression": 1,
        "SwitchCase": 1,
        "FunctionExpression": {
          "parameters": "first"
        },
        "CallExpression": {
          "arguments": "first"
        },
        "ArrayExpression": "first",
        "ObjectExpression": "first",
        "ImportDeclaration": "first"
      }
    ],
    /**
    * 控制逗号前后的空格
    */
    "comma-spacing": "off",
    "@typescript-eslint/comma-spacing": [
      "error",
      {
        "before": false,
        "after": true
      }
    ],
    /**
    * 控制逗号在行尾出现还是在行首出现
    * http: //eslint.org/docs/rules/comma-style
    */
    "comma-style": [
      "error",
      "last"
    ],
    /**
    * 所有引号使用双引号
    */
    "quotes": "off",
    "@typescript-eslint/quotes": [
      "error",
      "double"
    ],
    /**
    * 以方括号取对象属性时，[ 后面和 ] 前面是否需要空格, 可选参数 never, always
    */
    "computed-property-spacing": [
      "error",
      "always"
    ],
    /**
    * if-else等块的换行风格
    */
    "brace-style": [
      "error",
      "1tbs",
      {
        "allowSingleLine": true
      }
    ],
    /**
    * 箭头函数前后的空格
    */
    "arrow-spacing": [
      "error",
      {
        "before": true,
        "after": true
      }
    ],
    /**
    * 对象字面量中冒号的前后空格
    */
    "key-spacing": [
      "error",
      {
        "beforeColon": false,
        "afterColon": true
      }
    ],

    /**
    * 关键词前后的空格
    */
    "keyword-spacing": "off",
    "@typescript-eslint/keyword-spacing": [
      "error"
    ],

    /**
    * 类型冒号前后的空格
    */
    "@typescript-eslint/type-annotation-spacing":[
      "error",
      {
        "before": false,
        "after": true
      }
    ],
    "space-in-parens": [
      "error", "never"
    ],
    /**
    * 大括号内是否允许不必要的空格
    */
    "object-curly-spacing": "off",
    "@typescript-eslint/object-curly-spacing": [
      "error",
      "always",
      {
        "arraysInObjects": false,
        "objectsInObjects": false
      }
    ],
    /**
    * 强制函数括号前的空格保持一致
    */
    "space-before-function-paren": "off",
    "@typescript-eslint/space-before-function-paren": [
      "error"
    ],
    /**
    * 分号
    */
    "semi": "off",
    "@typescript-eslint/semi": [
      "error",
      "always"
    ],
    /**
    * 分号前后的空格
    */
    "semi-spacing": [
      "error",
      {
        "before": false,
        "after": true
      }
    ],
    /**
    * 禁用var，用let和const代替
    */
    "no-var": "error",
    /**
    * 不能用多余的空格
    */
    "no-multi-spaces":[
      "error",
      {
        "ignoreEOLComments": true,
        "exceptions": {
          "ImportDeclaration": false,
          "VariableDeclarator": false,
          "BinaryExpression": false,
          "Property": false
        }
      }
    ],
    /**
    * 注释前的空格
    */
    "spaced-comment": [
      "error", "always",
      {
          "markers": ["global", "globals", "eslint", "eslint-disable", "*package", "!", ","
        ]
      }
    ],

    /**
    * 属性的点前后不能有空格
    */
    "no-whitespace-before-property": "error",

    /**
    * 方法调用前的括号不能有空格
    */
    "no-spaced-func": "error",

    /**
    * 该规则旨在确保中缀操作符周围有空格。
    */
    "space-infix-ops": "off",
    "@typescript-eslint/space-infix-ops": [
      "error",
      {
        "int32Hint": false
      }
    ],

    /**
    * 没有可被修剪的空格
    */
    "no-trailing-spaces": "error",

    /**
    * 禁止不必要的分号
    */
    "no-extra-semi": "off",
    "@typescript-eslint/no-extra-semi": [
      "error"
    ],
    /**
    * 块之前的空格
    */
    "space-before-blocks":["error","always"],
    // 以下是还没有处理的配置
    "generator-star-spacing": [
      "error",
      {
        "before": true,
        "after": true
      }
    ],
    "@typescript-eslint/interface-name-prefix": 0,
    "@typescript-eslint/no-explicit-any": "off",
    "@typescript-eslint/no-use-before-define": "off",
    "@typescript-eslint/no-parameter-properties": 0,
    "@typescript-eslint/camelcase": [
      "off",
      {
        "properties": "always"
      }
    ],
    "@typescript-eslint/explicit-function-return-type": [
      "off",
      {
        "allowExpressions": true,
        "allowTypedFunctionExpressions": true
      }
    ]
  },
  "settings": {
    "import/resolver": {
      "node": {
        "extensions": [
          ".ts",
          ".js",
          ".json",
          ".node"
        ],
        "paths": [
          "src"
        ]
      }
    }
  }
}
